<?xml version="1.0" encoding="utf-8"?>
<parser delay="1500" speed="4M" date="2022.04.20">
    <url><![CDATA[wetv\.vip/play/.*/(?<id>[^&]+)]]></url>
    <title><![CDATA[title="([^"]+)"]]></title>
    <thumbnail><![CDATA[thumbnail=([^,]+)]]></thumbnail>
    <duration><![CDATA[duration=([^,]+)]]></duration>
    <mediaUrl><![CDATA[cr_video_url=([^\$]+)]]></mediaUrl>
    <ckSign><![CDATA[main_login]]></ckSign>
    <jsCode><![CDATA[
        try {
            //https://wetv.vip/play/uvwdajywre9oli9-Who-Rules-The-World/s0042aapjso-EP2-Who-Rules-The-World
            var ckey_81 = function() {
                String.prototype.padStart = function padStart(targetLength, padString) {
                    targetLength = targetLength >> 0; //floor if number or convert non-number to 0;
                    padString = String((typeof padString !== 'undefined' ? padString : ' '));
                    if (this.length > targetLength) {
                        return String(this);
                    }
                    else {
                        targetLength = targetLength - this.length;
                        if (targetLength > padString.length) {
                            padString += padString.repeat(targetLength / padString.length); //append to original to ensure we are longer than needed
                        }
                        return padString.slice(0, targetLength) + String(this);
                    }
                }

                function encodeText(text) {
                    const len = text.length,
                        arr = [];
                    for (let i = 0; i < len; i++) arr[i >>> 2] |= (255 & text.charCodeAt(i)) << 24 - i % 4 * 8;
                    return [arr, len];
                }

                function decodeText(arr, len) {
                    const textArray = [];
                    for (let i = 0; i < len; i++) {
                        textArray.push((arr[i >>> 2] >>> 24 - i % 4 * 8 & 255)
                            .toString(16)
                            .padStart(2, '0'))
                    }
                    return textArray.join('')
                }

                function shorten(text) {
                    return (text || '')
                        .substr(0, 48);
                }

                function calculateHash(text) {
                    let result = 0;
                    const len = text.length;
                    for (let i = 0; i < len; i++) result = (result << 5) - result + text.charCodeAt(i);
                    return result;
                }

                function padText(text) {
                    const padLength = 16 - text.length % 16;
                    for (let i = 0; i < padLength; ++i) text += String.fromCharCode(padLength);
                    return text;
                }

                function encrypt(arr) {
                    const len = arr.length;
                    for (let i = 0; i < len; i += 4) mainAlgorithm(arr, i);
                }

                // init start

                const encryptionArrays = [
                    [1332468387, -1641050960, 2136896045, -1629555948, 1399201960, -850809832, -1307058635, 751381793, -1933648423, 1106735553, -203378700, -550927659, 766369351, 1817882502, -1615200142, 1083409063, -104955314, -1780208184, 173944250, 1254993693, 1422337688, -1054667952, -880990486, -2119136777, -1822404972, 1380140484, -1723964626, 412019417, -890799303, -1734066435, 26893779, 420787978, -1337058067, 686432784, 695238595, 811911369, -391724567, -1068702727, -381903814, -648522509, -1266234148, 1959407397, -1644776673, 1152313324]
                ];

                (function() {
                    var d = [],
                        f = [],
                        g = [],
                        h = [],
                        j = [],
                        o = [];
                    for (let i = 0; i < 256; i++) o[i] = i < 128 ? i << 1 : i << 1 ^ 283;
                    var t = 0,
                        u = 0;
                    for (let i = 0; i < 256; i++) {
                        var v = u ^ u << 1 ^ u << 2 ^ u << 3 ^ u << 4;
                        v = v >>> 8 ^ 255 & v ^ 99;
                        d[t] = v;
                        var x = o[t],
                            z = o[o[x]],
                            A = 257 * o[v] ^ 16843008 * v;
                        f[t] = A << 24 | A >>> 8
                        g[t] = A << 16 | A >>> 16
                        h[t] = A << 8 | A >>> 24
                        j[t] = A
                        t ? (t = x ^ o[o[o[z ^ x]]], u ^= o[o[u]]) : t = u = 1
                    }

                    encryptionArrays.push(f);
                    encryptionArrays.push(g);
                    encryptionArrays.push(h);
                    encryptionArrays.push(j);
                    encryptionArrays.push(d);
                })();

                // init end

                function mainAlgorithm(a, b) {
                    var c = encryptionArrays[0];
                    var d = encryptionArrays[1];
                    var e = encryptionArrays[2];
                    var f = encryptionArrays[3];
                    var g = encryptionArrays[4];
                    var h = encryptionArrays[5];

                    let xorArr;
                    if (b === 0) {
                        xorArr = [22039283, 1457920463, 776125350, -1941999367];
                    } else {
                        xorArr = a.slice(b - 4, b);
                    }
                    for (let i = 0; i < 4; i++) a[b + i] ^= xorArr[i];

                    for (var i = 10, j = a[b] ^ c[0], k = a[b + 1] ^ c[1], l = a[b + 2] ^ c[2], m = a[b + 3] ^ c[3], n = 4, o = 1; o < i; o++) {
                        var q = d[j >>> 24] ^ e[k >>> 16 & 255] ^ f[l >>> 8 & 255] ^ g[255 & m] ^ c[n++],
                            s = d[k >>> 24] ^ e[l >>> 16 & 255] ^ f[m >>> 8 & 255] ^ g[255 & j] ^ c[n++],
                            t = d[l >>> 24] ^ e[m >>> 16 & 255] ^ f[j >>> 8 & 255] ^ g[255 & k] ^ c[n++];
                        m = d[m >>> 24] ^ e[j >>> 16 & 255] ^ f[k >>> 8 & 255] ^ g[255 & l] ^ c[n++];
                        j = q;
                        k = s;
                        l = t;
                    }

                    q = (h[j >>> 24] << 24 | h[k >>> 16 & 255] << 16 | h[l >>> 8 & 255] << 8 | h[255 & m]) ^ c[n++];
                    s = (h[k >>> 24] << 24 | h[l >>> 16 & 255] << 16 | h[m >>> 8 & 255] << 8 | h[255 & j]) ^ c[n++];
                    t = (h[l >>> 24] << 24 | h[m >>> 16 & 255] << 16 | h[j >>> 8 & 255] << 8 | h[255 & k]) ^ c[n++];
                    m = (h[m >>> 24] << 24 | h[j >>> 16 & 255] << 16 | h[k >>> 8 & 255] << 8 | h[255 & l]) ^ c[n++];
                    a[b] = q;
                    a[b + 1] = s;
                    a[b + 2] = t;
                    a[b + 3] = m;
                }

                return function(vid, tm, appVer, guid, platform, url, userAgent, referer, navCodeName, navName, navPlatform) {
                    if (typeof url === 'undefined') url = window.document.URL;
                    if (typeof userAgent === 'undefined') userAgent = window.navigator.userAgent;
                    if (typeof referer === 'undefined') referer = window.document.referrer;
                    if (typeof navCodeName === 'undefined') navCodeName = window.navigator.appCodeName;
                    if (typeof navName === 'undefined') navName = window.navigator.appName;
                    if (typeof navPlatform === 'undefined') navPlatform = window.navigator.platform;

                    const textParts = [
                        '', vid, tm, 'mg3c3b04ba', appVer, guid, platform, shorten(url),
                        shorten(userAgent.toLowerCase()), shorten(referer),
                        navCodeName, navName, navPlatform, '00', ''
                    ];
                    textParts.splice(1, 0, calculateHash(textParts.join('|')));

                    const text = padText(textParts.join('|'));
                    var et = encodeText(text);
                    var arr = et[0], len = et[1];
                    encrypt(arr);
                    return decodeText(arr, len)
                        .toUpperCase();
                }
            }();

            function getGuid(a) {
                a = a || 32;
                for (var b = '', c = 1; c <= a; c++) {
                    var d = Math.floor(16 * Math.random()).toString(16);
                    b += d
                }
                return b
            }

            //...
            var url = window.external.url;
            var jo = JSON.parse(window.__NEXT_DATA__.props.pageProps.data);
            var vi = jo.videoInfo;
            var title = vi.title;
            var thumbnail = vi.pic_640_360;
            var duration = vi.duration;
            var video_url = url;
            var vid = jo.videoInfo.vid;
            var cid = jo.coverInfo.cover_id;
            var t = Date.now().toString().substr(0, 10);
            var guid = getGuid();
            var ckey = ckey_81(vid, t, '3.5.57', guid, '4830201', url, 'wetv.vip');
            var flowid = window.external.md5(t) + '_10201';
            var vq = parseInt((window.external.vq && window.external.vq.match(/\d+/) ? window.external.vq : '1080').match(/\d+/)[0]);
            var defn = (vq >= 1080 || vq <= 8) ? 'fhd' : (vq == 720 ? 'shd' : 'hd');
            var cookie = window.external.getCookieEx(url, 'main_login', 2500) || window.external.getCookie(url);
            var userAgent = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.5414.75 Safari/537.36';
            var headers = 'Referer: ' + url + '\r\nUser-Agent: ' + userAgent + '\r\nCookie: ' + cookie;
            var api_url = 'https://play.wetv.vip/getvinfo?charge=0&otype=json&defnpayver=0&spau=1&spaudio=1&spwm=1&sphls=1&host=wetv.vip&refer=wetv.vip&ehost=' + url + '&sphttps=1&encryptVer=8.1&cKey=' + ckey + '&clip=4&guid=' + guid + '&flowid=' + flowid + '&platform=4830201&sdtfrom=1002&appVer=3.5.57&unid=&auth_from=&auth_ext=&vid=' + vid + '&defn=' + defn + '&fhdswitch=0&dtype=3&drm=32&spsrt=2&tm=' + t + '&logintoken=&spcaptiontype=1&cid=' + cid + '&callback=cr';
            var data = window.external.getHtmlCodeEx(api_url, headers);
            if (data.indexOf('ul\":{') != -1) {
                data = data.substring(3, data.length - 1);
                var jo = JSON.parse(data);
                video_url = jo.vl.vi[0].ul.ui[0].url;
                if (jo.vl.vi[0].ul.ui[0].hls)
                    video_url += (jo.vl.vi[0].ul.ui[0].hls.pt != '') ? jo.vl.vi[0].ul.ui[0].hls.pt : jo.vl.vi[0].fn;
                if (video_url.indexOf('.m3u8') == -1 && jo.vl.vi[0].fvkey) {
                    if (video_url.indexOf(jo.vl.vi[0].fn) == -1)
                        video_url += jo.vl.vi[0].fn;
                    video_url += '?vkey=' + jo.vl.vi[0].fvkey;
                }
            }

            document.body.innerHTML = 'title=\"' + title + '\",thumbnail=' + thumbnail + ',duration=' + duration + ',cr_video_url=' + video_url + '$' + document.body.innerHTML;
        }
        catch (ex) {
            document.body.innerHTML = 'cr_video_url=' + window.external.url + '$' + document.body.innerHTML;
        }
    ]]></jsCode>
</parser>